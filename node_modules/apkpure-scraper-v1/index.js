const axios = require('axios');
const cheerio = require('cheerio');

const apkpurelink = 'https://apkpure.com/search?q=';

const Proxy = function (url) {
  return url ? `https://translate.google.com/translate?sl=fr&tl=en&hl=en&u=${encodeURIComponent(url)}&client=webapp` : '';
};

const api = function (ID, path = '/', query = {}) {
  const baseURL = ID;
  const queryString = new URLSearchParams(Object.entries({ ...query })).toString();
  return baseURL + path + (queryString ? '?' + queryString : '');
};

let apkpure = {
  all: async function(query) {
    try {
      const formattedQuery = query.replace(/\s+/g, '+');
      const response = await axios.get(Proxy(api(apkpurelink + formattedQuery)));
      const $ = cheerio.load(response.data);

      const results = [];

      if ($('div.first.first-apk.sa-all-div.sa-apps-div.mb').length > 0) {
            $('div.first.first-apk.sa-all-div.sa-apps-div.mb').each((index, element) => {
                const appName = $(element).find('.p1').text().trim();
                let appLink = $(element).find('a.first-info').attr('href');
                const appImage = $(element).find('img.first-info-img').attr('src');

                appLink = appLink.replace('https://apkpure-com.translate.goog', 'https://apkpure.com').split('?')[0].replace(/_x_tr_sl=fr&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp/g, '');
                appLink = Proxy(api(appLink));

                results.push({
                    name: appName,
                    link: appLink,
                    image: appImage
                });
            });
        } else {
            $('dl[data-dt-recid]').each((index, element) => {
                const appName = $(element).find('.p1').text().trim();
                let appLink = $(element).find('a.dd').attr('href');
                const appImage = $(element).find('img').attr('src');

                appLink = appLink.replace('https://apkpure-com.translate.goog', 'https://apkpure.com').split('?')[0].replace(/_x_tr_sl=fr&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp/g, '');
                appLink = Proxy(api(appLink));

                results.push({
                    name: appName,
                    link: appLink,
                    image: appImage
                });
            });
        }

      if (results.length > 0) {

        const firstLink = results[0].link;

        const infoResult = await info(firstLink);
        results[0].developer = infoResult.developer;
        results[0].modifiedDownloadLink = infoResult.modifiedDownloadLink;

        const finalUrlResult = await getFinalUrl(infoResult.modifiedDownloadLink);
        results[0].downloadLink = finalUrlResult.downloadLink;
        results[0].fileSize = finalUrlResult.fileSize;
        results[0].downloadCount = finalUrlResult.downloadCount;
        results[0].packageName = finalUrlResult.packageName;
        results[0].appFormat = finalUrlResult.appFormat;

        return {
          appName: results[0].name,
          image: results[0].image,
          Downloadlink: results[0].downloadLink,
          downloadCount: results[0].downloadCount,
          packageName: results[0].packageName,
          appFormat: results[0].appFormat
        };
      } else {
        return {};
      }
    } catch (error) {
      console.error('Error fetching data:', error);
      return {};
    }
  }
};

async function info(link) {
  try {
    const res = await axios.get(link);
    const $ = cheerio.load(res.data);

    const developer = $('span.developer').find('a').text().trim();
    const downloadLink = $('.download-btn-box a.download_apk_news').attr('href');
    let modifiedDownloadLink = downloadLink.replace('https://apkpure-com.translate.goog', 'https://apkpure.com').split('?')[0].replace(/_x_tr_sl=fr&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp/g, '');
    modifiedDownloadLink = Proxy(api(modifiedDownloadLink));

    return {
      developer: developer,
      modifiedDownloadLink: modifiedDownloadLink
    };
  } catch (error) {
    console.error('Error fetching data:', error);
    return {};
  }
}

async function getFinalUrl(arg) {
  try {
    const linkResponse = await axios.get(arg);
    const $ = cheerio.load(linkResponse.data);

    const downloadText = $('span.download-text.one-line').text().trim();

    let appFormat;
    if (downloadText === 'Download XAPK') {
      appFormat = 'xapk';
    } else if (downloadText === 'Download APK') {
      appFormat = 'apk';
    } else {
      appFormat = 'Unknown';
    }

    const downloadLink = $('a.download-start-btn').attr('href');
    const fileSize = $('span.download-file-size').text().trim();
    const downloadCount = $('span.download-count').text().trim();
    const packageName = $('a.value.double-lines').text().trim();

    return {
      downloadLink: downloadLink,
      fileSize: fileSize,
      downloadCount: downloadCount,
      packageName: packageName,
      appFormat: appFormat
    };
  } catch (error) {
    console.error('Error fetching data:', error);
    return {};
  }
}

let apk = {apkpure}
module.exports = apk;
